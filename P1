#include <iostream>
#include <cmath>

// функция, для которой вычисляем интеграл
double f(double x) {
    return std::cos(x) * std::cos(x);
}

// метод левых прямоугольников
double leftrectanglemethod(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = 0.0;
    for (int i = 0; i < n; i++) {
        double x = a + i * h;
        sum += f(x);
    }
    return h * sum;
}

// метод ньютона-симпсона (квадратура)
double simpsonmethod(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = f(a) + f(b);
    for (int i = 1; i < n; i += 2) {
        double x = a + i * h;
        sum += 4 * f(x);
    }
    for (int i = 2; i < n - 1; i += 2) {
        double x = a + i * h;
        sum += 2 * f(x);
    }
    return (h / 3) * sum;
}

int main() {
    double a, b;
    std::cout << "введите значения a и b (интервал интегрирования): ";
    std::cin >> a >> b;

    // вычисление интеграла методом левых прямоугольников
    int n = 1000; // количество разбиений
    double leftrectangleresult = leftrectanglemethod(a, b, n);

    // вычисление интеграла методом ньютона-симпсона
    int m = 100; // количество разбиений
    double simpsonresult = simpsonmethod(a, b, m);

    std::cout << "приближенное значение интеграла (метод левых прямоугольников): " << leftrectangleresult << std::endl;
    std::cout << "приближенное значение интеграла (метод ньютона-симпсона): " << simpsonresult << std::endl;

    return 0;
}
