#include <iostream>
#include <cmath>
#include <vector>
#include <fstream>

// Функция для вычисления y' = f(x, y)
double func(double x, double y) {
    return y * y + x;
}

// Класс для реализации метода Рунге-Кутты
class RungeKuttaSolver {
public:
    RungeKuttaSolver(double (*function)(double, double)) : f(function) {}

    // Выполнение метода Рунге-Кутты
    void solve(double x0, double y0, double h, double xEnd, const std::string& filename) {
        std::vector<double> xValues, yValues;
        xValues.push_back(x0);
        yValues.push_back(y0);

        double x = x0, y = y0;
        while (x < xEnd) {
            double k1 = h * f(x, y);
            double k2 = h * f(x + 0.5 * h, y + 0.5 * k1);
            double k3 = h * f(x + 0.5 * h, y + 0.5 * k2);
            double k4 = h * f(x + h, y + k3);

            y += (k1 + 2 * k2 + 2 * k3 + k4) / 6.0;
            x += h;

            xValues.push_back(x);
            yValues.push_back(y);
        }

        // Вывод результата в файл
        outputToFile(xValues, yValues, filename);
    }

private:
    double (*f)(double, double); // Указатель на функцию

    // Вывод значений в файл
    void outputToFile(const std::vector<double>& xValues, const std::vector<double>& yValues, const std::string& filename) {
        std::ofstream file(filename);
        if (file.is_open()) {
            for (size_t i = 0; i < xValues.size(); ++i) {
                file << xValues[i] << " " << yValues[i] << std::endl;
            }
            file.close();
        } else {
            std::cerr << "Unable to open file: " << filename << std::endl;
        }
    }
};

int main() {
    double a, b, h;
    double x0, y0;

    std::cout << "Введите интервал [a, b]: ";
    std::cin >> a >> b;

    std::cout << "Введите размер шага h: ";
    std::cin >> h;

    std::cout << "Введите начальные условия x0 и y0: ";
    std::cin >> x0 >> y0;

    RungeKuttaSolver solver(func);
    solver.solve(x0, y0, h, b, "p3.dat");

    return 0;
}
